"""Initial migration

Revision ID: bcee8135647c
Revises: 
Create Date: 2023-11-20 18:08:30.784719

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bcee8135647c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('patronym', sa.String(length=50), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('person_type', sa.String(length=16), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('teacher', sa.Boolean(), nullable=True),
    sa.Column('color', sa.String(length=16), nullable=True),
    sa.Column('leaving_reason', sa.String(length=120), nullable=True),
    sa.Column('pause_until', sa.Date(), nullable=True),
    sa.Column('comment', sa.String(length=120), nullable=True),
    sa.Column('primary_contact', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['primary_contact'], ['persons.id'], name=op.f('fk_persons_primary_contact_persons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_persons'))
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms'))
    )
    op.create_table('school_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_class', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_school_classes'))
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=120), nullable=True),
    sa.Column('one_time_price', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('school_price', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subjects'))
    )
    op.create_table('subscription_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lessons', sa.Integer(), nullable=True),
    sa.Column('period', sa.String(length=50), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscription_types'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('telegram', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('other_contact', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_contacts_person_id_persons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contacts')),
    sa.UniqueConstraint('person_id', name=op.f('uq_contacts_person_id'))
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('lesson_type', sa.String(length=50), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_lessons_room_id_rooms')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_lessons_subject_id_subjects')),
    sa.ForeignKeyConstraint(['teacher_id'], ['persons.id'], name=op.f('fk_lessons_teacher_id_persons')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lessons'))
    )
    op.create_table('parent_child_table',
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('relation', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['persons.id'], name=op.f('fk_parent_child_table_child_id_persons')),
    sa.ForeignKeyConstraint(['parent_id'], ['persons.id'], name=op.f('fk_parent_child_table_parent_id_persons'))
    )
    op.create_table('student_subject_table',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['persons.id'], name=op.f('fk_student_subject_table_student_id_persons')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_student_subject_table_subject_id_subjects'))
    )
    op.create_table('subscription_types_table',
    sa.Column('subscription_types_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_subscription_types_table_subject_id_subjects')),
    sa.ForeignKeyConstraint(['subscription_types_id'], ['subscription_types.id'], name=op.f('fk_subscription_types_table_subscription_types_id_subscription_types'))
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subscription_type_id', sa.Integer(), nullable=True),
    sa.Column('lessons_left', sa.Integer(), nullable=True),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['persons.id'], name=op.f('fk_subscriptions_student_id_persons')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_subscriptions_subject_id_subjects')),
    sa.ForeignKeyConstraint(['subscription_type_id'], ['subscription_types.id'], name=op.f('fk_subscriptions_subscription_type_id_subscription_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions'))
    )
    op.create_table('teacher_subject_table',
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_teacher_subject_table_subject_id_subjects')),
    sa.ForeignKeyConstraint(['teacher_id'], ['persons.id'], name=op.f('fk_teacher_subject_table_teacher_id_persons'))
    )
    op.create_table('class_lesson_table',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['school_classes.id'], name=op.f('fk_class_lesson_table_class_id_school_classes')),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_class_lesson_table_lesson_id_lessons'))
    )
    op.create_table('student_lesson_attended_table',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_student_lesson_attended_table_lesson_id_lessons')),
    sa.ForeignKeyConstraint(['student_id'], ['persons.id'], name=op.f('fk_student_lesson_attended_table_student_id_persons'))
    )
    op.create_table('student_lesson_registered_table',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('fk_student_lesson_registered_table_lesson_id_lessons')),
    sa.ForeignKeyConstraint(['student_id'], ['persons.id'], name=op.f('fk_student_lesson_registered_table_student_id_persons'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_lesson_registered_table')
    op.drop_table('student_lesson_attended_table')
    op.drop_table('class_lesson_table')
    op.drop_table('teacher_subject_table')
    op.drop_table('subscriptions')
    op.drop_table('subscription_types_table')
    op.drop_table('student_subject_table')
    op.drop_table('parent_child_table')
    op.drop_table('lessons')
    op.drop_table('contacts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('subscription_types')
    op.drop_table('subjects')
    op.drop_table('school_classes')
    op.drop_table('rooms')
    op.drop_table('persons')
    # ### end Alembic commands ###
